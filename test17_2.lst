Compiled on: Wed Apr 29 07:24:36 EDT 2009
$        LDA     R15, V1
$        LDA     R14, C1
$        LD      R13, #16000
$        JMP     M1
$   % Not yet found: a
$   % Not yet found: a
$   % Entering: private variable entry: ID = a semantic: VariableExpression: level(1) offset(0) direct, with type integer type.
$   % Not yet found: n
$   % Not yet found: n
$   % Not yet found: n
$   % Entering: public variable entry: ID = n semantic: VariableExpression: level(2) offset(8) direct, with type integer type.
$   % Not yet found: result
$   % Not yet found: result
$   % Not yet found: result
$   % Entering: public variable entry: ID = result semantic: VariableExpression: level(2) offset(10) indirect, with type integer type.
$   % Not yet found: fac
$   % Not yet found: fac
$   % Entering: public variable entry: ID = fac semantic: VariableExpression: level(1) offset(2) direct, with type tupleType:[] with size: 0
$   % Not yet found: pre
$   % Not yet found: pre
$   % Not yet found: pre
$   % Not yet found: pre
$   % Entering: public variable entry: ID = pre semantic: VariableExpression: level(3) offset(8) direct, with type integer type.
$   % Not yet found: n
$   % Entering: public variable entry: ID = n semantic: VariableExpression: level(3) offset(10) direct, with type integer type.
$   % Not yet found: result
$   % Entering: public variable entry: ID = result semantic: VariableExpression: level(3) offset(12) indirect, with type integer type.
$   % Not yet found: help
$   % Not yet found: help
$   % Not yet found: help
$   % Entering: public variable entry: ID = help semantic: VariableExpression: level(2) offset(0) direct, with type tupleType:[] with size: 0
$   % Not yet found: b
$   % Not yet found: b
$   % Not yet found: b
$   % Not yet found: b
$   % Not yet found: b
$   % Entering: public variable entry: ID = b semantic: VariableExpression: level(4) offset(8) direct, with type integer type.
$   % Not yet found: c
$   % Not yet found: c
$   % Not yet found: c
$   % Not yet found: c
$   % Not yet found: c
$   % Entering: public variable entry: ID = c semantic: VariableExpression: level(4) offset(10) direct, with type integer type.
$   % Not yet found: result
$   % Entering: public variable entry: ID = result semantic: VariableExpression: level(4) offset(12) indirect, with type integer type.
$   % Not yet found: multiply
$   % Not yet found: multiply
$   % Not yet found: multiply
$   % Not yet found: multiply
$   % Entering: public variable entry: ID = multiply semantic: VariableExpression: level(3) offset(0) direct, with type tupleType:[] with size: 0
$   % Not yet found: a
$   % Not yet found: a
$   % Not yet found: a
$   % Entering: public variable entry: ID = a semantic: VariableExpression: level(4) offset(-2) direct, with type integer type.
$   % Not yet found: i
$   % Not yet found: i
$   % Not yet found: i
$   % Not yet found: i
$   % Not yet found: i
$   % Entering: public variable entry: ID = i semantic: VariableExpression: level(4) offset(-4) direct, with type integer type.
$   % Not yet found: a
$   % Entering: public variable entry: ID = a semantic: VariableExpression: level(5) offset(8) direct, with type integer type.
$   % Not yet found: b
$   % Entering: public variable entry: ID = b semantic: VariableExpression: level(5) offset(10) direct, with type integer type.
$   % Not yet found: result
$   % Entering: public variable entry: ID = result semantic: VariableExpression: level(5) offset(12) indirect, with type integer type.
$   % Not yet found: adder
$   % Not yet found: adder
$   % Not yet found: adder
$   % Not yet found: adder
$   % Not yet found: adder
$   % Entering: public variable entry: ID = adder semantic: VariableExpression: level(4) offset(-4) direct, with type tupleType:[] with size: 0
$    LABEL P5
$        STO     R11, +4(R13)
$        LD      R11, +2(R13)
$        STO     R12, +0(R13)
$        LDA     R12, +0(R13)
$        IS      R13, #22
$        STO     R0, +0(R13)
$        STO     R1, +2(R13)
$        STO     R2, +4(R13)
$        STO     R3, +6(R13)
$        STO     R4, +8(R13)
$        STO     R5, +10(R13)
$        STO     R6, +12(R13)
$        STO     R7, +14(R13)
$        STO     R8, +16(R13)
$        STO     R9, +18(R13)
$        STO     R10, +20(R13)
$        LD      R0, +8(R12)
$        IA      R0, +10(R12)
$        STO     R0, *+12(R12)
$    LABEL U5
$        LD      R0, +0(R13)
$        LD      R1, +2(R13)
$        LD      R2, +4(R13)
$        LD      R3, +6(R13)
$        LD      R4, +8(R13)
$        LD      R5, +10(R13)
$        LD      R6, +12(R13)
$        LD      R7, +14(R13)
$        LD      R8, +16(R13)
$        LD      R9, +18(R13)
$        LD      R10, +20(R13)
$        IA      R13, #22
$        LD      R12, +0(R13)
$        LD      R11, +4(R13)
$        JMP     *R11
$    LABEL P4
$        STO     R11, +4(R13)
$        LD      R11, +2(R13)
$        STO     R12, +0(R13)
$        LDA     R12, +0(R13)
$        IS      R13, #26
$        STO     R0, +0(R13)
$        STO     R1, +2(R13)
$        STO     R2, +4(R13)
$        STO     R3, +6(R13)
$        STO     R4, +8(R13)
$        STO     R5, +10(R13)
$        STO     R6, +12(R13)
$        STO     R7, +14(R13)
$        STO     R8, +16(R13)
$        STO     R9, +18(R13)
$        STO     R10, +20(R13)
$        LD      R0, +0(R14)
$        STO     R0, -4(R12)
$        LD      R0, +2(R14)
$        STO     R0, -2(R12)
$    LABEL J7
$        LD      R1, -4(R12)
$        LD      R0, #1
$        IC      R1, +8(R12)
$        JLT     &4
$        LD      R0, #0
$        IC      R0, #1
$        JNE     J8
$        LD      R0, -4(R12)
$        IA      R0, +4(R14)
$        STO     R0, -4(R12)
$        LDA     R0, -4(R12)
$        IS      R13, #14
$        STO     R0, +6(R13)
$        STO     R11, +2(R13)
$        LD      R1, -2(R12)
$        STO     R1, +8(R13)
$        LD      R1, +10(R12)
$        STO     R1, +10(R13)
$        LDA     R1, -2(R12)
$        STO     R1, +12(R13)
$        JSR     R11, P5
$        STO     R12, +2(R12)
$        IA      R13, #14
$        JMP     J6
$    LABEL J8
$        JMP     &4
$    LABEL J6
$        JMP     J7
$        IS      R13, #2
$        LD      R1, -2(R12)
$        STO     R1, *R13
$        LD      R1, *R13
$        STO     R1, *+12(R12)
$        IA      R13, #2
$    LABEL U4
$        LD      R0, +0(R13)
$        LD      R1, +2(R13)
$        LD      R2, +4(R13)
$        LD      R3, +6(R13)
$        LD      R4, +8(R13)
$        LD      R5, +10(R13)
$        LD      R6, +12(R13)
$        LD      R7, +14(R13)
$        LD      R8, +16(R13)
$        LD      R9, +18(R13)
$        LD      R10, +20(R13)
$        IA      R13, #26
$        LD      R12, +0(R13)
$        LD      R11, +4(R13)
$        JMP     *R11
$   % Not yet found: temp
$   % Not yet found: temp
$   % Not yet found: temp
$   % Not yet found: temp
$   % Entering: public variable entry: ID = temp semantic: VariableExpression: level(3) offset(-2) direct, with type integer type.
$    LABEL P3
$        STO     R11, +4(R13)
$        LD      R11, +2(R13)
$        STO     R12, +0(R13)
$        LDA     R12, +0(R13)
$        IS      R13, #24
$        STO     R0, +0(R13)
$        STO     R1, +2(R13)
$        STO     R2, +4(R13)
$        STO     R3, +6(R13)
$        STO     R4, +8(R13)
$        STO     R5, +10(R13)
$        STO     R6, +12(R13)
$        STO     R7, +14(R13)
$        STO     R8, +16(R13)
$        STO     R9, +18(R13)
$        STO     R10, +20(R13)
$        LD      R2, +10(R12)
$        LD      R1, #1
$        IC      R2, +6(R14)
$        JGT     &4
$        LD      R1, #0
$        IC      R1, #1
$        JNE     J10
$        LDA     R1, +0(R12)
$        IS      R13, #14
$        STO     R1, +6(R13)
$        STO     R11, +2(R13)
$        LD      R2, +10(R12)
$        STO     R2, +8(R13)
$        LD      R2, +8(R12)
$        STO     R2, +10(R13)
$        LDA     R2, -2(R12)
$        STO     R2, +12(R13)
$        JSR     R11, P4
$        STO     R12, +2(R12)
$        IA      R13, #14
$   % Not yet found: help
$        LD      R2, +10(R12)
$        IS      R2, +8(R14)
$        LDA     R3, +0(R11)
$        IS      R13, #14
$        STO     R3, +6(R13)
$        STO     R12, +2(R13)
$        LD      R4, -2(R12)
$        STO     R4, +8(R13)
$        STO     R2, +10(R13)
$        LDA     R2, *+12(R12)
$        STO     R2, +12(R13)
$        JSR     R11, P3
$        STO     R12, +2(R12)
$        IA      R13, #14
$        JMP     J9
$    LABEL J10
$        LD      R4, +10(R12)
$        LD      R2, #1
$        IC      R4, +10(R14)
$        JLE     &4
$        LD      R2, #0
$        IC      R2, #1
$        JNE     J11
$        IS      R13, #2
$        LD      R2, +8(R12)
$        STO     R2, *R13
$        LD      R2, *R13
$        STO     R2, *+12(R12)
$        IA      R13, #2
$        JMP     J9
$    LABEL J11
$        HALT    
$    LABEL J9
$    LABEL U3
$        LD      R0, +0(R13)
$        LD      R1, +2(R13)
$        LD      R2, +4(R13)
$        LD      R3, +6(R13)
$        LD      R4, +8(R13)
$        LD      R5, +10(R13)
$        LD      R6, +12(R13)
$        LD      R7, +14(R13)
$        LD      R8, +16(R13)
$        LD      R9, +18(R13)
$        LD      R10, +20(R13)
$        IA      R13, #24
$        LD      R12, +0(R13)
$        LD      R11, +4(R13)
$        JMP     *R11
$    LABEL P2
$        STO     R11, +4(R13)
$        LD      R11, +2(R13)
$        STO     R12, +0(R13)
$        LDA     R12, +0(R13)
$        IS      R13, #22
$        STO     R0, +0(R13)
$        STO     R1, +2(R13)
$        STO     R2, +4(R13)
$        STO     R3, +6(R13)
$        STO     R4, +8(R13)
$        STO     R5, +10(R13)
$        STO     R6, +12(R13)
$        STO     R7, +14(R13)
$        STO     R8, +16(R13)
$        STO     R9, +18(R13)
$        STO     R10, +20(R13)
$        LDA     R2, +0(R12)
$        IS      R13, #14
$        STO     R2, +6(R13)
$        STO     R11, +2(R13)
$        LD      R4, +12(R14)
$        STO     R4, +8(R13)
$        LD      R4, +8(R12)
$        STO     R4, +10(R13)
$        LDA     R4, *+10(R12)
$        STO     R4, +12(R13)
$        JSR     R11, P3
$        STO     R12, +2(R12)
$        IA      R13, #14
$    LABEL U2
$        LD      R0, +0(R13)
$        LD      R1, +2(R13)
$        LD      R2, +4(R13)
$        LD      R3, +6(R13)
$        LD      R4, +8(R13)
$        LD      R5, +10(R13)
$        LD      R6, +12(R13)
$        LD      R7, +14(R13)
$        LD      R8, +16(R13)
$        LD      R9, +18(R13)
$        LD      R10, +20(R13)
$        IA      R13, #22
$        LD      R12, +0(R13)
$        LD      R11, +4(R13)
$        JMP     *R11
$    LABEL M1
$        LDA     R4, +2(R15)
$        IS      R13, #12
$        STO     R4, +6(R13)
$        STO     R11, +2(R13)
$        LD      R5, +14(R14)
$        STO     R5, +8(R13)
$        LDA     R5, +0(R15)
$        STO     R5, +10(R13)
$        JSR     R11, P2
$        STO     R12, +2(R12)
$        IA      R13, #12
$        WRST    +16(R14)
$        WRI     +0(R15)
$        WRST    +32(R14)
$        WRNL    
$        HALT    
$    LABEL C1
$        INT      0
$        INT      0
$        INT      1
$        INT      0
$        INT      1
$        INT      0
$        INT      1
$        INT      4
$        STRING   "factorial(4) = "
$        STRING   " (should be 24)"
$    LABEL V1
$        SKIP     2
  <end of compilation> 	There were 0 errors detected
  Allocated Registers: 0 1 2 3 4 11 12 13 14 15 

