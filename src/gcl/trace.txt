
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

definitionPart
first:   identifier "constant" "typedefinition" "integer" "Boolean" "tuple" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "typedefinition" "integer" "Boolean" 
         "tuple" 
follow:  "." 

statementPart
first:   identifier "skip" "read" "write" "forall" "if" "do" 
follow:  "end" "llarof" "fi" "od" "[]" 

definition
first:   identifier "constant" "typedefinition" "integer" "Boolean" "tuple" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "forall" "if" "do" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" 

expression
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "," "]" ".." "->" ")" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "]" "range" "array" 

rangeType
first:   "range" 
follow:  identifier 

arrayType
first:   "array" 
follow:  identifier 

tupleType
first:   "tuple" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier ";" "=" "," "[" "]" "range" ".." "array" ":=" "->" "|" "&" 
         "+" "-" ")" "#" "<" ">" "<=" ">=" "*" "/" "\\" "@" 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

assignStatement
first:   identifier 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

forStatement
first:   "forall" 
follow:  ";" 

variableAccess
first:   identifier 
follow:  ";" "=" "," "]" ".." ":=" "->" "|" "&" "+" "-" ")" "#" "<" ">" "<=" 
         ">=" "*" "/" "\\" 

writeItem
first:   identifier numeral string "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "," 

guardedCommandList
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  "fi" "od" 

guardedCommand
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  "fi" "od" "[]" 

andExpr
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "," "]" ".." "->" "|" ")" 

relationalExpr
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "," "]" ".." "->" "|" "&" ")" 

simpleExpr
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" ")" "#" "<" ">" "<=" ">=" 

relationalOperator
first:   "=" "#" "<" ">" "<=" ">=" 
follow:  identifier numeral "[" "+" "-" "(" "true" "false" "~" 

term
first:   identifier numeral "[" "(" "true" "false" "~" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" "+" "-" ")" "#" "<" ">" "<=" ">=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "true" "false" "~" 

factor
first:   identifier numeral "[" "(" "true" "false" "~" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" "+" "-" ")" "#" "<" ">" "<=" ">=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "true" "false" "~" 

subscriptsAndComponents
first:   "[" "@" 
follow:  ";" "=" "," "[" "]" ".." ":=" "->" "|" "&" "+" "-" ")" "#" "<" ">" 
         "<=" ">=" "*" "/" "\\" "@" 


Cross reference list:
--------------------

  "#"           249
  "&"           199
  "("           232
  ")"           232
  "*"           262
  "+"           212  257
  ","            87  112  142  147  160  163  241
  "-"           213  258
  "->"          168  188
  "."            56  270
  ".."          120
  "/"           263
  ":="          161
  ";"            62   66   66
  "<"           250
  "<="          252
  "="            72  248
  ">"           251
  ">="          253
  "@"           283
  "Boolean"     104
  "["           110  120  128  128  239  284
  "[]"          184
  "\\"          264
  "]"           115  120  128  128  244  284
  "array"       128
  "begin"        60
  "constant"     71
  "do"          179
  "end"          60
  "false"       234
  "fi"          175
  "forall"      168
  "if"          174
  "integer"     103
  "llarof"      170
  "module"       53
  "od"          180
  "private"      55
  "range"       120
  "read"        141
  "skip"        137
  "true"        233
  "tuple"       110
  "typedefinit   75
  "write"       146
  "|"           194
  "~"           235
  addOperator  -255  216
  andExpr      -196  194  194
  arrayType    -124   97
  assignStatem -156  135
  block         -58   55
  definition    -68   62
  definitionPa  -62   54   60
  doStatement  -177  135
  emptyStateme -137  134
  expression   -191   72  120  120  152  162  163  188  232  239  241  284
  factor       -226  223  223  235
  forStatement -166  135
  gcl           -44
  guardedComma -186  184  184
  guardedComma -182  174  179
  identifier     53   71   75   83   87  110  112  268  270  283
  ifStatement  -172  135
  module        -51   47   48
  multiplyOper -260  223
  numeral       229
  qualifiedIde -266  105  276
  rangeType    -118   96
  readStatemen -139  134
  relationalEx -201  199  199
  relationalOp -246  205
  simpleExpr   -209  204  205
  statement    -132   66   66
  statementPar  -64   60  169  189
  string        153
  subscriptsAn -280  277
  term         -220  212  213  216
  tupleType    -107   98
  type          -93   75   83
  typeSymbol   -101   95  110  112  128  128
  variableAcce -273  141  142  159  160  168  228
  variableDefi  -80   70
  writeItem    -150  146  147
  writeStateme -144  134



53 terminals
95 symbols
294 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                21 classLitToken
  2 numeral        t    false                22 classToken
  3 string         t    false                23 classToken
  4 "module"       t    false                53 litToken
  5 "private"      t    false                55 litToken
  6 "."            t    false                56 fixedToken
  7 "begin"        t    false                60 litToken
  8 "end"          t    false                60 litToken
  9 ";"            t    false                62 fixedToken
 10 "constant"     t    false                71 litToken
 11 "="            t    false                72 fixedToken
 12 "typedefinit   t    false                75 litToken
 13 ","            t    false                87 fixedToken
 14 "integer"      t    false               103 litToken
 15 "Boolean"      t    false               104 litToken
 16 "tuple"        t    false               110 litToken
 17 "["            t    false               110 fixedToken
 18 "]"            t    false               115 fixedToken
 19 "range"        t    false               120 litToken
 20 ".."           t    false               120 fixedToken
 21 "array"        t    false               128 litToken
 22 "skip"         t    false               137 litToken
 23 "read"         t    false               141 litToken
 24 "write"        t    false               146 litToken
 25 ":="           t    false               161 fixedToken
 26 "forall"       t    false               168 litToken
 27 "->"           t    false               168 fixedToken
 28 "llarof"       t    false               170 litToken
 29 "if"           t    false               174 litToken
 30 "fi"           t    false               175 litToken
 31 "do"           t    false               179 litToken
 32 "od"           t    false               180 litToken
 33 "[]"           t    false               184 fixedToken
 34 "|"            t    false               194 fixedToken
 35 "&"            t    false               199 fixedToken
 36 "+"            t    false               212 fixedToken
 37 "-"            t    false               213 fixedToken
 38 "("            t    false               232 fixedToken
 39 ")"            t    false               232 fixedToken
 40 "true"         t    false               233 litToken
 41 "false"        t    false               234 litToken
 42 "~"            t    false               235 fixedToken
 43 "#"            t    false               249 fixedToken
 44 "<"            t    false               250 fixedToken
 45 ">"            t    false               251 fixedToken
 46 "<="           t    false               252 fixedToken
 47 ">="           t    false               253 fixedToken
 48 "*"            t    false               262 fixedToken
 49 "/"            t    false               263 fixedToken
 50 "\\"           t    false               264 fixedToken
 51 "@"            t    false               283 fixedToken
 52 ???            t    false                 0 fixedToken
 53 option1        pr   false                25 fixedToken
 54 option3        pr   false                27 fixedToken
 55 option5        pr   false                29 fixedToken
 56 option6        pr   false                30 fixedToken
 57 option7        pr   false                31 fixedToken
 58 option9        pr   false                33 fixedToken
 59 option10       pr   false                34 fixedToken
  0 gcl            nt   false     1 false    44 fixedToken
  1 module         nt   true      9 false    51 fixedToken
  2 definitionPa   nt   true     26 true     62 fixedToken
  3 block          nt   true     18 false    58 fixedToken
  4 statementPar   nt   true     27 false    64 fixedToken
  5 definition     nt   true     42 false    68 fixedToken
  6 statement      nt   true    108 false   132 fixedToken
  7 variableDefi   nt   true     50 false    80 fixedToken
  8 expression     nt   true    180 false   191 fixedToken
  9 type           nt   true     64 false    93 fixedToken
 10 typeSymbol     nt   true     70 false   101 fixedToken
 11 rangeType      nt   true     88 false   118 fixedToken
 12 arrayType      nt   true     95 false   124 fixedToken
 13 tupleType      nt   true     75 false   107 fixedToken
 14 qualifiedIde   nt   true    275 false   266 fixedToken
 15 emptyStateme   nt   false   120 false   137 fixedToken
 16 readStatemen   nt   true    121 false   139 fixedToken
 17 writeStateme   nt   true    128 false   144 fixedToken
 18 assignStatem   nt   true    140 false   156 fixedToken
 19 ifStatement    nt   true    161 false   172 fixedToken
 20 doStatement    nt   true    166 false   177 fixedToken
 21 forStatement   nt   true    154 false   166 fixedToken
 22 variableAcce   nt   true    281 false   273 fixedToken
 23 writeItem      nt   true    138 false   150 fixedToken
 24 guardedComma   nt   true    171 false   182 fixedToken
 25 guardedComma   nt   true    175 false   186 fixedToken
 26 andExpr        nt   true    185 false   196 fixedToken
 27 relationalEx   nt   true    190 false   201 fixedToken
 28 simpleExpr     nt   true    201 false   209 fixedToken
 29 relationalOp   nt   false   246 false   246 fixedToken
 30 term           nt   true    207 false   220 fixedToken
 31 addOperator    nt   false   264 false   255 fixedToken
 32 factor         nt   true    215 false   226 fixedToken
 33 multiplyOper   nt   false   270 false   260 fixedToken
 34 subscriptsAn   nt   true    292 false   280 fixedToken

Literal Tokens:
--------------

