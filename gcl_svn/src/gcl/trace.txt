
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

definitionPart
first:   "integer" "Boolean" "tuple" 
follow:  "private" "." "begin" 

block
first:   "begin" "integer" "Boolean" "tuple" 
follow:  "." 

statementPart
first:   identifier "skip" "read" "write" "if" 
follow:  "end" "fi" "[]" 

definition
first:   "integer" "Boolean" "tuple" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "if" 
follow:  ";" 

variableDefinition
first:   "integer" "Boolean" "tuple" 
follow:  ";" 

type
first:   "integer" "Boolean" "tuple" 
follow:  identifier 

typeSymbol
first:   "integer" "Boolean" 
follow:  identifier 

tupleType
first:   "tuple" 
follow:  identifier 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

assignStatement
first:   identifier 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

variableAccess
first:   identifier 
follow:  ";" "," "]" ":=" "->" "+" "-" ")" "=" "#" "<" ">" "<=" ">=" "*" "/" 

expression
first:   identifier numeral "[" "+" "-" "(" 
follow:  ";" "," "]" "->" ")" 

guardedCommandList
first:   identifier numeral "[" "+" "-" "(" 
follow:  "fi" 

guardedCommand
first:   identifier numeral "[" "+" "-" "(" 
follow:  "fi" "[]" 

relationalExpr
first:   identifier numeral "[" "+" "-" "(" 
follow:  ";" "," "]" "->" ")" 

simpleExpr
first:   identifier numeral "[" "+" "-" "(" 
follow:  ";" "," "]" "->" ")" "=" "#" "<" ">" "<=" ">=" 

relationalOperator
first:   "=" "#" "<" ">" "<=" ">=" 
follow:  identifier numeral "[" "+" "-" "(" 

term
first:   identifier numeral "[" "(" 
follow:  ";" "," "]" "->" "+" "-" ")" "=" "#" "<" ">" "<=" ">=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" 

factor
first:   identifier numeral "[" "(" 
follow:  ";" "," "]" "->" "+" "-" ")" "=" "#" "<" ">" "<=" ">=" "*" "/" 

multiplyOperator
first:   "*" "/" 
follow:  identifier numeral "[" "(" 

qualifiedIdentifier
first:   identifier 
follow:  ";" "," "]" ":=" "->" "+" "-" ")" "=" "#" "<" ">" "<=" ">=" "*" "/" 


Cross reference list:
--------------------

  "#"           195
  "("           181
  ")"           181
  "*"           208
  "+"           161  203
  ","            78   98  114  119  126  129  187
  "-"           162  204
  "->"          143
  "."            55
  "/"           209
  ":="          127
  ";"            61   65   65
  "<"           196
  "<="          198
  "="           194
  ">"           197
  ">="          199
  "Boolean"      91
  "["            96  185
  "[]"          139
  "]"           101  190
  "begin"        59
  "end"          59
  "fi"          135
  "if"          134
  "integer"      90
  "module"       52
  "private"      54
  "read"        113
  "skip"        109
  "tuple"        96
  "write"       118
  addOperator  -201  165
  assignStatem -122  107
  block         -57   54
  definition    -67   61
  definitionPa  -61   53   59
  emptyStateme -109  106
  expression   -146  118  119  128  129  143  181  185  187
  factor       -175  172  172
  gcl           -43
  guardedComma -141  139  139
  guardedComma -137  134
  identifier     52   74   78   96   98  213
  ifStatement  -132  107
  module        -50   46   47
  multiplyOper -206  172
  numeral       178
  qualifiedIde -211  219
  readStatemen -111  106
  relationalEx -150  148
  relationalOp -192  154
  simpleExpr   -158  153  154
  statement    -104   65   65
  statementPar  -63   59  144
  term         -169  161  162  165
  tupleType     -93   86
  type          -84   74
  typeSymbol    -88   86   96   98
  variableAcce -216  113  114  125  126  177
  variableDefi  -71   69
  writeStateme -116  106



36 terminals
71 symbols
195 nodes
8 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                20 classLitToken
  2 numeral        t    false                21 classToken
  3 "module"       t    false                52 litToken
  4 "private"      t    false                54 litToken
  5 "."            t    false                55 fixedToken
  6 "begin"        t    false                59 litToken
  7 "end"          t    false                59 litToken
  8 ";"            t    false                61 fixedToken
  9 ","            t    false                78 fixedToken
 10 "integer"      t    false                90 litToken
 11 "Boolean"      t    false                91 litToken
 12 "tuple"        t    false                96 litToken
 13 "["            t    false                96 fixedToken
 14 "]"            t    false               101 fixedToken
 15 "skip"         t    false               109 litToken
 16 "read"         t    false               113 litToken
 17 "write"        t    false               118 litToken
 18 ":="           t    false               127 fixedToken
 19 "if"           t    false               134 litToken
 20 "fi"           t    false               135 litToken
 21 "[]"           t    false               139 fixedToken
 22 "->"           t    false               143 fixedToken
 23 "+"            t    false               161 fixedToken
 24 "-"            t    false               162 fixedToken
 25 "("            t    false               181 fixedToken
 26 ")"            t    false               181 fixedToken
 27 "="            t    false               194 fixedToken
 28 "#"            t    false               195 fixedToken
 29 "<"            t    false               196 fixedToken
 30 ">"            t    false               197 fixedToken
 31 "<="           t    false               198 fixedToken
 32 ">="           t    false               199 fixedToken
 33 "*"            t    false               208 fixedToken
 34 "/"            t    false               209 fixedToken
 35 ???            t    false                 0 fixedToken
 36 option1        pr   false                24 fixedToken
 37 option3        pr   false                26 fixedToken
 38 option5        pr   false                28 fixedToken
 39 option6        pr   false                29 fixedToken
 40 option7        pr   false                30 fixedToken
 41 option9        pr   false                32 fixedToken
 42 option10       pr   false                33 fixedToken
  0 gcl            nt   false     1 false    43 fixedToken
  1 module         nt   true      9 false    50 fixedToken
  2 definitionPa   nt   true     25 true     61 fixedToken
  3 block          nt   true     17 false    57 fixedToken
  4 statementPar   nt   true     26 false    63 fixedToken
  5 definition     nt   true     33 false    67 fixedToken
  6 statement      nt   true     66 false   104 fixedToken
  7 variableDefi   nt   true     34 false    71 fixedToken
  8 type           nt   true     43 false    84 fixedToken
  9 typeSymbol     nt   false    49 false    88 fixedToken
 10 tupleType      nt   true     51 false    93 fixedToken
 11 emptyStateme   nt   false    74 false   109 fixedToken
 12 readStatemen   nt   true     75 false   111 fixedToken
 13 writeStateme   nt   true     82 false   116 fixedToken
 14 assignStatem   nt   true     90 false   122 fixedToken
 15 ifStatement    nt   true    104 false   132 fixedToken
 16 variableAcce   nt   true    193 false   216 fixedToken
 17 expression     nt   true    118 false   146 fixedToken
 18 guardedComma   nt   true    109 false   137 fixedToken
 19 guardedComma   nt   true    113 false   141 fixedToken
 20 relationalEx   nt   true    119 false   150 fixedToken
 21 simpleExpr     nt   true    130 false   158 fixedToken
 22 relationalOp   nt   false   165 false   192 fixedToken
 23 term           nt   true    136 false   169 fixedToken
 24 addOperator    nt   false   183 false   201 fixedToken
 25 factor         nt   true    144 false   175 fixedToken
 26 multiplyOper   nt   false   189 false   206 fixedToken
 27 qualifiedIde   nt   true    191 false   211 fixedToken

Literal Tokens:
--------------

