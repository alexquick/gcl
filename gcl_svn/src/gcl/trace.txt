
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

definitionPart
first:   identifier "constant" "typedefinition" "integer" "Boolean" "tuple" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "typedefinition" "integer" "Boolean" 
         "tuple" 
follow:  "." 

statementPart
first:   identifier "skip" "read" "write" "forall" "if" "do" 
follow:  "end" "llarof" "fi" "od" "[]" 

definition
first:   identifier "constant" "typedefinition" "integer" "Boolean" "tuple" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "forall" "if" "do" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" 

expression
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "," ".." "]" "->" ")" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "range" 

tupleType
first:   "tuple" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier ";" "=" "," "range" ".." "]" ":=" "->" "|" "&" "+" "-" ")" 
         "#" "<" ">" "<=" ">=" "*" "/" "\\" 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

assignStatement
first:   identifier 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

forStatement
first:   "forall" 
follow:  ";" 

variableAccess
first:   identifier 
follow:  ";" "=" "," ".." "]" ":=" "->" "|" "&" "+" "-" ")" "#" "<" ">" "<=" 
         ">=" "*" "/" "\\" 

writeItem
first:   identifier numeral string "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "," 

guardedCommandList
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  "fi" "od" 

guardedCommand
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  "fi" "od" "[]" 

andExpr
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "," ".." "]" "->" "|" ")" 

relationalExpr
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "," ".." "]" "->" "|" "&" ")" 

simpleExpr
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "=" "," ".." "]" "->" "|" "&" ")" "#" "<" ">" "<=" ">=" 

relationalOperator
first:   "=" "#" "<" ">" "<=" ">=" 
follow:  identifier numeral "[" "+" "-" "(" "true" "false" "~" 

term
first:   identifier numeral "[" "(" "true" "false" "~" 
follow:  ";" "=" "," ".." "]" "->" "|" "&" "+" "-" ")" "#" "<" ">" "<=" ">=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "true" "false" "~" 

factor
first:   identifier numeral "[" "(" "true" "false" "~" 
follow:  ";" "=" "," ".." "]" "->" "|" "&" "+" "-" ")" "#" "<" ">" "<=" ">=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "true" "false" "~" 


Cross reference list:
--------------------

  "#"           233
  "&"           183
  "("           216
  ")"           216
  "*"           246
  "+"           196  241
  ","            87  110  126  131  144  147  225
  "-"           197  242
  "->"          152  172
  "."            56
  ".."           95
  "/"           247
  ":="          145
  ";"            62   66   66
  "<"           234
  "<="          236
  "="            72  232
  ">"           235
  ">="          237
  "Boolean"     102
  "["            95  108  223
  "[]"          168
  "\\"          248
  "]"            95  113  228
  "begin"        60
  "constant"     71
  "do"          163
  "end"          60
  "false"       218
  "fi"          159
  "forall"      152
  "if"          158
  "integer"     101
  "llarof"      154
  "module"       53
  "od"          164
  "private"      55
  "range"        95
  "read"        125
  "skip"        121
  "true"        217
  "tuple"       108
  "typedefinit   75
  "write"       130
  "|"           178
  "~"           219
  addOperator  -239  200
  andExpr      -180  178  178
  assignStatem -140  119
  block         -58   55
  definition    -68   62
  definitionPa  -62   54   60
  doStatement  -161  119
  emptyStateme -121  118
  expression   -175   72   95   95  136  146  147  172  216  223  225
  factor       -210  207  207  219
  forStatement -150  119
  gcl           -44
  guardedComma -170  168  168
  guardedComma -166  158  163
  identifier     53   71   75   83   87  108  110  252
  ifStatement  -156  119
  module        -51   47   48
  multiplyOper -244  207
  numeral       213
  qualifiedIde -250  103  258
  readStatemen -123  118
  relationalEx -185  183  183
  relationalOp -230  189
  simpleExpr   -193  188  189
  statement    -116   66   66
  statementPar  -64   60  153  173
  string        137
  term         -204  196  197  200
  tupleType    -105   97
  type          -93   75   83
  typeSymbol    -99   95  108  110
  variableAcce -255  125  126  143  144  152  212
  variableDefi  -80   70
  writeItem    -134  130  131
  writeStateme -128  118



51 terminals
90 symbols
263 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                21 classLitToken
  2 numeral        t    false                22 classToken
  3 string         t    false                23 classToken
  4 "module"       t    false                53 litToken
  5 "private"      t    false                55 litToken
  6 "."            t    false                56 fixedToken
  7 "begin"        t    false                60 litToken
  8 "end"          t    false                60 litToken
  9 ";"            t    false                62 fixedToken
 10 "constant"     t    false                71 litToken
 11 "="            t    false                72 fixedToken
 12 "typedefinit   t    false                75 litToken
 13 ","            t    false                87 fixedToken
 14 "range"        t    false                95 litToken
 15 "["            t    false                95 fixedToken
 16 ".."           t    false                95 fixedToken
 17 "]"            t    false                95 fixedToken
 18 "integer"      t    false               101 litToken
 19 "Boolean"      t    false               102 litToken
 20 "tuple"        t    false               108 litToken
 21 "skip"         t    false               121 litToken
 22 "read"         t    false               125 litToken
 23 "write"        t    false               130 litToken
 24 ":="           t    false               145 fixedToken
 25 "forall"       t    false               152 litToken
 26 "->"           t    false               152 fixedToken
 27 "llarof"       t    false               154 litToken
 28 "if"           t    false               158 litToken
 29 "fi"           t    false               159 litToken
 30 "do"           t    false               163 litToken
 31 "od"           t    false               164 litToken
 32 "[]"           t    false               168 fixedToken
 33 "|"            t    false               178 fixedToken
 34 "&"            t    false               183 fixedToken
 35 "+"            t    false               196 fixedToken
 36 "-"            t    false               197 fixedToken
 37 "("            t    false               216 fixedToken
 38 ")"            t    false               216 fixedToken
 39 "true"         t    false               217 litToken
 40 "false"        t    false               218 litToken
 41 "~"            t    false               219 fixedToken
 42 "#"            t    false               233 fixedToken
 43 "<"            t    false               234 fixedToken
 44 ">"            t    false               235 fixedToken
 45 "<="           t    false               236 fixedToken
 46 ">="           t    false               237 fixedToken
 47 "*"            t    false               246 fixedToken
 48 "/"            t    false               247 fixedToken
 49 "\\"           t    false               248 fixedToken
 50 ???            t    false                 0 fixedToken
 51 option1        pr   false                25 fixedToken
 52 option3        pr   false                27 fixedToken
 53 option5        pr   false                29 fixedToken
 54 option6        pr   false                30 fixedToken
 55 option7        pr   false                31 fixedToken
 56 option9        pr   false                33 fixedToken
 57 option10       pr   false                34 fixedToken
  0 gcl            nt   false     1 false    44 fixedToken
  1 module         nt   true      9 false    51 fixedToken
  2 definitionPa   nt   true     25 true     62 fixedToken
  3 block          nt   true     17 false    58 fixedToken
  4 statementPar   nt   true     26 false    64 fixedToken
  5 definition     nt   true     41 false    68 fixedToken
  6 statement      nt   true     92 false   116 fixedToken
  7 variableDefi   nt   true     49 false    80 fixedToken
  8 expression     nt   true    164 false   175 fixedToken
  9 type           nt   true     66 false    93 fixedToken
 10 typeSymbol     nt   true     72 false    99 fixedToken
 11 tupleType      nt   true     77 false   105 fixedToken
 12 qualifiedIde   nt   true    259 false   250 fixedToken
 13 emptyStateme   nt   false   104 false   121 fixedToken
 14 readStatemen   nt   true    105 false   123 fixedToken
 15 writeStateme   nt   true    112 false   128 fixedToken
 16 assignStatem   nt   true    124 false   140 fixedToken
 17 ifStatement    nt   true    145 false   156 fixedToken
 18 doStatement    nt   true    150 false   161 fixedToken
 19 forStatement   nt   true    138 false   150 fixedToken
 20 variableAcce   nt   true    261 false   255 fixedToken
 21 writeItem      nt   true    122 false   134 fixedToken
 22 guardedComma   nt   true    155 false   166 fixedToken
 23 guardedComma   nt   true    159 false   170 fixedToken
 24 andExpr        nt   true    169 false   180 fixedToken
 25 relationalEx   nt   true    174 false   185 fixedToken
 26 simpleExpr     nt   true    185 false   193 fixedToken
 27 relationalOp   nt   false   230 false   230 fixedToken
 28 term           nt   true    191 false   204 fixedToken
 29 addOperator    nt   false   248 false   239 fixedToken
 30 factor         nt   true    199 false   210 fixedToken
 31 multiplyOper   nt   false   254 false   244 fixedToken

Literal Tokens:
--------------

