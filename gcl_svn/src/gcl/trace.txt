
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

definitionPart
first:   identifier "constant" "typedefinition" "integer" "Boolean" "tuple" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "typedefinition" "integer" "Boolean" 
         "tuple" 
follow:  "." 

statementPart
first:   identifier "skip" "read" "write" "if" "do" 
follow:  "end" "fi" "od" "[]" 

definition
first:   identifier "constant" "typedefinition" "integer" "Boolean" "tuple" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "if" "do" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" 

expression
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "," "]" "->" ")" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier 

tupleType
first:   "tuple" 
follow:  identifier 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

assignStatement
first:   identifier 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

variableAccess
first:   identifier 
follow:  ";" "=" "," "]" ":=" "->" "|" "&" "+" "-" ")" "#" "<" ">" "<=" ">=" 
         "*" "/" "\\" 

writeItem
first:   identifier numeral string "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "," 

guardedCommandList
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  "fi" "od" 

guardedCommand
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  "fi" "od" "[]" 

andExpr
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "," "]" "->" "|" ")" 

relationalExpr
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "," "]" "->" "|" "&" ")" 

simpleExpr
first:   identifier numeral "[" "+" "-" "(" "true" "false" "~" 
follow:  ";" "=" "," "]" "->" "|" "&" ")" "#" "<" ">" "<=" ">=" 

relationalOperator
first:   "=" "#" "<" ">" "<=" ">=" 
follow:  identifier numeral "[" "+" "-" "(" "true" "false" "~" 

term
first:   identifier numeral "[" "(" "true" "false" "~" 
follow:  ";" "=" "," "]" "->" "|" "&" "+" "-" ")" "#" "<" ">" "<=" ">=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "true" "false" "~" 

factor
first:   identifier numeral "[" "(" "true" "false" "~" 
follow:  ";" "=" "," "]" "->" "|" "&" "+" "-" ")" "#" "<" ">" "<=" ">=" "*" 
         "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "true" "false" "~" 

qualifiedIdentifier
first:   identifier 
follow:  ";" "=" "," "]" ":=" "->" "|" "&" "+" "-" ")" "#" "<" ">" "<=" ">=" 
         "*" "/" "\\" 


Cross reference list:
--------------------

  "#"           223
  "&"           173
  "("           206
  ")"           206
  "*"           236
  "+"           186  231
  ","            85  106  122  127  140  143  215
  "-"           187  232
  "->"          162
  "."            56
  "/"           237
  ":="          141
  ";"            62   66   66
  "<"           224
  "<="          226
  "="            72  222
  ">"           225
  ">="          227
  "Boolean"      98
  "["           104  213
  "[]"          158
  "\\"          238
  "]"           109  218
  "begin"        60
  "constant"     71
  "do"          153
  "end"          60
  "false"       208
  "fi"          149
  "if"          148
  "integer"      97
  "module"       53
  "od"          154
  "private"      55
  "read"        121
  "skip"        117
  "true"        207
  "tuple"       104
  "typedefinit   75
  "write"       126
  "|"           168
  "~"           209
  addOperator  -229  190
  andExpr      -170  168  168
  assignStatem -136  115
  block         -58   55
  definition    -68   62
  definitionPa  -62   54   60
  doStatement  -151  115
  emptyStateme -117  114
  expression   -165   72  132  142  143  162  206  213  215
  factor       -200  197  197  209
  gcl           -44
  guardedComma -160  158  158
  guardedComma -156  148  153
  identifier     53   71   75   81   85   99  104  106  242
  ifStatement  -146  115
  module        -51   47   48
  multiplyOper -234  197
  numeral       203
  qualifiedIde -240  248
  readStatemen -119  114
  relationalEx -175  173  173
  relationalOp -220  179
  simpleExpr   -183  178  179
  statement    -112   66   66
  statementPar  -64   60  163
  string        133
  term         -194  186  187  190
  tupleType    -101   93
  type          -91   75   81
  typeSymbol    -95   93  104  106
  variableAcce -245  121  122  139  140  202
  variableDefi  -78   70
  writeItem    -130  126  127
  writeStateme -124  114



47 terminals
85 symbols
246 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                21 classLitToken
  2 numeral        t    false                22 classToken
  3 string         t    false                23 classToken
  4 "module"       t    false                53 litToken
  5 "private"      t    false                55 litToken
  6 "."            t    false                56 fixedToken
  7 "begin"        t    false                60 litToken
  8 "end"          t    false                60 litToken
  9 ";"            t    false                62 fixedToken
 10 "constant"     t    false                71 litToken
 11 "="            t    false                72 fixedToken
 12 "typedefinit   t    false                75 litToken
 13 ","            t    false                85 fixedToken
 14 "integer"      t    false                97 litToken
 15 "Boolean"      t    false                98 litToken
 16 "tuple"        t    false               104 litToken
 17 "["            t    false               104 fixedToken
 18 "]"            t    false               109 fixedToken
 19 "skip"         t    false               117 litToken
 20 "read"         t    false               121 litToken
 21 "write"        t    false               126 litToken
 22 ":="           t    false               141 fixedToken
 23 "if"           t    false               148 litToken
 24 "fi"           t    false               149 litToken
 25 "do"           t    false               153 litToken
 26 "od"           t    false               154 litToken
 27 "[]"           t    false               158 fixedToken
 28 "->"           t    false               162 fixedToken
 29 "|"            t    false               168 fixedToken
 30 "&"            t    false               173 fixedToken
 31 "+"            t    false               186 fixedToken
 32 "-"            t    false               187 fixedToken
 33 "("            t    false               206 fixedToken
 34 ")"            t    false               206 fixedToken
 35 "true"         t    false               207 litToken
 36 "false"        t    false               208 litToken
 37 "~"            t    false               209 fixedToken
 38 "#"            t    false               223 fixedToken
 39 "<"            t    false               224 fixedToken
 40 ">"            t    false               225 fixedToken
 41 "<="           t    false               226 fixedToken
 42 ">="           t    false               227 fixedToken
 43 "*"            t    false               236 fixedToken
 44 "/"            t    false               237 fixedToken
 45 "\\"           t    false               238 fixedToken
 46 ???            t    false                 0 fixedToken
 47 option1        pr   false                25 fixedToken
 48 option3        pr   false                27 fixedToken
 49 option5        pr   false                29 fixedToken
 50 option6        pr   false                30 fixedToken
 51 option7        pr   false                31 fixedToken
 52 option9        pr   false                33 fixedToken
 53 option10       pr   false                34 fixedToken
  0 gcl            nt   false     1 false    44 fixedToken
  1 module         nt   true      9 false    51 fixedToken
  2 definitionPa   nt   true     25 true     62 fixedToken
  3 block          nt   true     17 false    58 fixedToken
  4 statementPar   nt   true     26 false    64 fixedToken
  5 definition     nt   true     41 false    68 fixedToken
  6 statement      nt   true     84 false   112 fixedToken
  7 variableDefi   nt   true     49 false    78 fixedToken
  8 expression     nt   true    147 false   165 fixedToken
  9 type           nt   true     58 false    91 fixedToken
 10 typeSymbol     nt   true     64 false    95 fixedToken
 11 tupleType      nt   true     69 false   101 fixedToken
 12 emptyStateme   nt   false    94 false   117 fixedToken
 13 readStatemen   nt   true     95 false   119 fixedToken
 14 writeStateme   nt   true    102 false   124 fixedToken
 15 assignStatem   nt   true    114 false   136 fixedToken
 16 ifStatement    nt   true    128 false   146 fixedToken
 17 doStatement    nt   true    133 false   151 fixedToken
 18 variableAcce   nt   true    244 false   245 fixedToken
 19 writeItem      nt   true    112 false   130 fixedToken
 20 guardedComma   nt   true    138 false   156 fixedToken
 21 guardedComma   nt   true    142 false   160 fixedToken
 22 andExpr        nt   true    152 false   170 fixedToken
 23 relationalEx   nt   true    157 false   175 fixedToken
 24 simpleExpr     nt   true    168 false   183 fixedToken
 25 relationalOp   nt   false   213 false   220 fixedToken
 26 term           nt   true    174 false   194 fixedToken
 27 addOperator    nt   false   231 false   229 fixedToken
 28 factor         nt   true    182 false   200 fixedToken
 29 multiplyOper   nt   false   237 false   234 fixedToken
 30 qualifiedIde   nt   true    242 false   240 fixedToken

Literal Tokens:
--------------

