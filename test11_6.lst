Compiled on: Wed Apr 01 02:23:09 EDT 2009
$        LDA     R15, V1
$        LDA     R14, C1
$        LD      R13, #16000
$   % Not yet found: i
$   % Not yet found: i
$   % Entering: private variable entry: ID = i semantic: VariableExpression: level(1) offset(0) direct, with type integer type.
$   % Not yet found: j
$   % Not yet found: j
$   % Entering: private variable entry: ID = j semantic: VariableExpression: level(1) offset(2) direct, with type integer type.
$   % Not yet found: max
$   % Not yet found: max
$   % Declaring Constant: private constant entry: ID = max semantic: ConstantExpression: 2 with type integer type.
$   % Not yet found: mlo
$   % Not yet found: mlo
$   % Declaring Constant: private constant entry: ID = mlo semantic: ConstantExpression: 1 with type integer type.
$   % Declaring type constant: zero_mlo as 0..1
$   % Not yet found: a
$   % Not yet found: a
$   % Entering: private variable entry: ID = a semantic: VariableExpression: level(1) offset(4) direct, with type [0..1][0..1]integer type.
$        LD      R0, +4(R14)
$        STO     R0, +0(R15)
$    LABEL J2
$        LD      R1, +0(R15)
$        LD      R0, #1
$        IC      R1, +6(R14)
$        JLE     &4
$        LD      R0, #0
$        IC      R0, #1
$        JNE     J3
$        LD      R0, +0(R15)
$        TRNG    R0, +0(R14)
$        LD      R1, +0(R15)
$        IM      R1, #4
$        LDA     R2, +4(R15)
$        IA      R2, R1
$        IA      R2, #0
$        RDI     *R2
$        LD      R1, +0(R15)
$        IA      R1, +8(R14)
$        STO     R1, +0(R15)
$        JMP     J1
$    LABEL J3
$        JMP     &4
$    LABEL J1
$        JMP     J2
$        LDA     R1, +4(R15)
$        IA      R1, #0
$        IA      R1, #2
$        LDA     R3, +4(R15)
$        IA      R3, #0
$        IA      R3, #0
$        IS      R13, #2
$        LD      R4, *R3
$        STO     R4, *R13
$        LD      R3, *R13
$        STO     R3, *R1
$        IA      R13, #2
$        LD      R1, +10(R14)
$        STO     R1, +0(R15)
$    LABEL J5
$        LD      R3, +0(R15)
$        LD      R1, #1
$        IC      R3, +12(R14)
$        JLE     &4
$        LD      R1, #0
$        IC      R1, #1
$        JNE     J6
$        LD      R1, +0(R15)
$        IA      R1, +14(R14)
$        STO     R1, +0(R15)
$        LD      R1, +0(R15)
$        TRNG    R1, +0(R14)
$        LD      R3, +0(R15)
$        IM      R3, #4
$        LDA     R4, +4(R15)
$        IA      R4, R3
$        IA      R4, #2
$        LD      R3, +0(R15)
$        IS      R3, +16(R14)
$        TRNG    R3, +0(R14)
$        IM      R3, #4
$        LDA     R5, +4(R15)
$        IA      R5, R3
$        IA      R5, #2
$        LD      R3, +0(R15)
$        TRNG    R3, +0(R14)
$        LD      R6, +0(R15)
$        IM      R6, #4
$        LDA     R7, +4(R15)
$        IA      R7, R6
$        IA      R7, #0
$        LD      R6, *R5
$        IA      R6, *R7
$        STO     R6, *R4
$        JMP     J4
$    LABEL J6
$        JMP     &4
$    LABEL J4
$        JMP     J5
$        LD      R4, +18(R14)
$        STO     R4, +0(R15)
$    LABEL J8
$        LD      R5, +0(R15)
$        LD      R4, #1
$        IC      R5, +20(R14)
$        JLE     &4
$        LD      R4, #0
$        IC      R4, #1
$        JNE     J9
$        LD      R4, +0(R15)
$        IA      R4, +22(R14)
$        STO     R4, +0(R15)
$        LD      R4, +0(R15)
$        TRNG    R4, +0(R14)
$        LD      R5, +0(R15)
$        IM      R5, #4
$        LDA     R6, +4(R15)
$        IA      R6, R5
Cannot assign constant to range when constant is out of range bounds
At -- line 22 col 9: error 8
ERROR -> Operand types are not equivalent. 

$        HALT    
$   % Array index out of bounds:ConstantExpression: 2 with type integer type. for 0..1
$        LD      R5, +0(R15)
$        TRNG    R5, +0(R14)
$        LD      R7, +0(R15)
$        IM      R7, #4
$        LDA     R8, +4(R15)
$        IA      R8, R7
$        IA      R8, #0
$        LD      R7, +0(R15)
$        TRNG    R7, +0(R14)
$        LD      R9, +0(R15)
$        IM      R9, #4
$        LDA     R10, +4(R15)
$        IA      R10, R9
$        IA      R10, #2
$        LD      R9, *R8
$        IM      R9, *R10
$        JMP     J7
$    LABEL J9
$        JMP     &4
$    LABEL J7
$        JMP     J8
$        LD      R8, +24(R14)
$        STO     R8, +0(R15)
$        LD      R8, +26(R14)
$        STO     R8, +2(R15)
$    LABEL J11
$        LD      R10, +0(R15)
$        LD      R8, #1
$        IC      R10, +28(R14)
$        JLE     &4
$        LD      R8, #0
$        LD      R11, +2(R15)
$        LD      R10, #1
$        IC      R11, +30(R14)
$        JLE     &4
$        LD      R10, #0
$        BA      R8, R10
$        IC      R8, #1
$        JNE     J12
$        LD      R8, +0(R15)
$        TRNG    R8, +0(R14)
$        LD      R10, +0(R15)
$        IM      R10, #4
$        LDA     R11, +4(R15)
$        IA      R11, R10
$        LD      R10, +2(R15)
$        TRNG    R10, +0(R14)
$        LD      R12, +2(R15)
$        IM      R12, #2
$        IA      R11, R12
$        WRI     *R11
$        WRNL    
$        LD      R11, +2(R15)
$        IA      R11, +32(R14)
$        STO     R11, +2(R15)
$        LD      R12, +2(R15)
$        LD      R11, #1
$        IC      R12, +34(R14)
$        JGT     &4
$        LD      R11, #0
$        IC      R11, #1
$        JNE     J14
$        LD      R11, +0(R15)
$        IA      R11, +36(R14)
$        STO     R11, +0(R15)
$        LD      R11, +38(R14)
$        STO     R11, +2(R15)
$        JMP     J13
$    LABEL J14
$        LD      R12, +2(R15)
$        LD      R11, #1
$        IC      R12, +40(R14)
$        JLE     &4
$        LD      R11, #0
$        IC      R11, #1
$        JNE     J15
$        JMP     J13
$    LABEL J15
$        HALT    
$    LABEL J13
$        JMP     J10
$    LABEL J12
$        JMP     &4
$    LABEL J10
$        JMP     J11
$        HALT    
$    LABEL C1
$        INT      0
$        INT      1
$        INT      0
$        INT      2
$        INT      1
$        INT      1
$        INT      2
$        INT      1
$        INT      1
$        INT      0
$        INT      2
$        INT      1
$        INT      0
$        INT      0
$        INT      2
$        INT      2
$        INT      1
$        INT      2
$        INT      1
$        INT      0
$        INT      2
$    LABEL V1
$        SKIP     12
  <end of compilation> 	There were 1 errors detected
  Allocated Registers: 0 1 2 3 4 5 6 7 8 9 10 13 14 15 

$        HALT    
